public class LinkedList3<T> {
    class Node {
        Node next;
        Node prev;
        T value;

        Node(T value) {
            this.value = value;
        }
    }

    Node current;
    Node first;

    public void push(T value) {
        Node node = new Node(value);
        if(first == null) {
            first = node;
            current = first;
            return;
        }
        current.next = node;
        current = current.next;
    }

    public void deleteNode(T value) {
        Node current = first;
        Node prev = null;
        if(first.value == value) {
            first = current.next;
            return;
        }
        while (current != null) {
            if(current != first && current.value == value) {
                prev.next = current.next;
                break;
            }
            prev = current;
            current = current.next;
        }
    }

    public void pushToIndex(int index, T value) {
        Node node = new Node(value);
        Node current = first;
        int localIndex = 0;
        if(index == 0) {
            Node savedFirst = first;
            first = node;
            first.next = savedFirst;
            return;
        }
        while(current != null) {
            localIndex++;
            if(localIndex == index) {
                Node saved = current;


current = node;
                current.prev = saved;
                current.next = saved.next;
                return;
            }
            current.prev = current;
            current = current.next;
        }
    }




    public Node getNode(int index) {
        Node current = first;
        Node prev = null;
        int localIndex = 0;
        if(index == 0) {
            return first;
        }
        while(current != null) {
            localIndex++;
            if(localIndex == index) {
                return current;
            }
            prev = current;
            current = current.next;
        }
        return null;
    }

    public void removeNode(int index) {
        Node current = first;
        Node prev = null;
        int localIndex = 0;
        if(index == 0) {
            first = first.next;
            return;
        }
        while(current != null) {
            localIndex++;
            if(localIndex == index) {
                prev.next = current.next;
                break;
            }
            prev = current;
            current = current.next;
        }
    }

    public void printAllNodes() {
        Node copy = first;
        while (copy != null) {
            System.out.println(copy.value);
            copy = copy.next;
        }
    }

}